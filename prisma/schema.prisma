// --- Enum ---
enum RoleEnum {
  super_admin
  admin
  user
}

// --- Core User Table ---
model User {
  user_id       String @id @default(uuid())
  password      String
  first_name    String
  last_name     String
  email_address String

  // one-to-one
  authenLog    AuthenLog?
  userMetaData MetaData?
  Employee     Employee?
  Personal     Personal?

  created_at DateTime
  updated_at DateTime

  UserRole UserRole[]

  createdMetaData  MetaData[] @relation("MetaDataCreatedBy") // เปลี่ยนชื่อ field
  modifiedMetaData MetaData[] @relation("MetaDataModifiedBy") // เปลี่ยนชื่อ field
}

// --- Authentication Log ---
model AuthenLog {
  authenLog_id            String   @id @default(uuid())
  user                    User     @relation(fields: [user_id], references: [user_id])
  user_id                 String   @unique
  lastLogin_date          DateTime
  lastPassword_changeDate DateTime
}

// --- User Metadata ---
model MetaData {
  meta_id                  String   @id @default(uuid())
  user                     User     @relation(fields: [user_id], references: [user_id])
  user_id                  String   @unique
  start_date               DateTime
  end_date                 DateTime
  status                   String   @default("active")
  is_admin                 Boolean  @default(false)
  created_by               User     @relation("MetaDataCreatedBy", fields: [created_by_user_id], references: [user_id]) // เชื่อมโยงไปยัง User
  created_by_user_id       String // foreign key field
  created_date             DateTime
  last_modified_by         User     @relation("MetaDataModifiedBy", fields: [last_modified_by_user_id], references: [user_id]) // เชื่อมโยงไปยัง User
  last_modified_by_user_id String // foreign key field
  last_modified_date       DateTime
}

// --- Employee Details ---
model Employee {
  employee_id String      @id @default(uuid())
  user        User        @relation(fields: [user_id], references: [user_id])
  user_id     String      @unique
  department  Department?
  job_title   JobTitle?
}

// --- Personal Details ---
model Personal {
  personal_id   String   @id @default(uuid())
  user          User     @relation(fields: [user_id], references: [user_id])
  user_id       String   @unique
  id_card       String
  phone_number  String
  date_of_birth DateTime
  gender        String
}

// --- Department ---
model Department {
  department_id   String   @id @default(uuid())
  employee        Employee @relation(fields: [employee_id], references: [employee_id])
  employee_id     String   @unique
  department_name String
  description     String
}

// --- Job Title ---
model JobTitle {
  job_title_id    String   @id @default(uuid())
  employee        Employee @relation(fields: [employee_id], references: [employee_id])
  employee_id     String   @unique
  job_title_name  String
  job_description String
}

// --- Role ---
model Role {
  role_id     String   @id @default(uuid())
  role_name   RoleEnum @default(user)
  description String

  UserRole UserRole[]
}

// -*- Joint Table -*-
model UserRole {
  id      Int    @id @default(autoincrement())
  user    User   @relation(fields: [user_id], references: [user_id])
  user_id String @unique
  role    Role   @relation(fields: [role_id], references: [role_id])
  role_id String @unique
}
